#include<bits/stdc++.h>
using namespace std;
int n,a[10005],b[10005],v3[10005]={0,1,6,25,27,27,28,29,30,32,32,32,32,32,32,32,32,32,32,32,34,36,38,39,40,40,42,45,49,50,51,52,53,53,54,54,54,56,57,57,57,59,59,59,59,61,63,63,63,64,66};
int v4[10005]={0,1,1,2,2,3,3,4,4,4,4,4,5,6,6,7,7,8,9,9,9,9,11,12,13,13,13,13,13,13,13,14,14,14,14,14,15,15,16,17,18,19,19,20,20,20,21,21,21,21,21,23,24,25,25,26,26,26,26,26,27,28,28,29,29,29,29,29,29,30,30,31,31,31,31,31,31,32,32,32,32,33,34,34,35,36,43,44,45,46,47,48,49,54,55,55,56,114,356,356,356,357,357,358,359,359,359,360,361,362,362,363,363,363,364,364,364,365,366,366,366,367,367,367,368,369,369,370,370,371,372,373,376,377,377,378,379,380,380,380,380,380,381,381,382,383,383,383,383,384,385,386,386,387,388,388,389,389,390,390,390,390,390,390,391,392,399,399,399,400,401,411,412,413,413,413,413,413,413,414,414,414,414,414,414,414,414,415,416,417,418,418,418,418,419,420,420,424,425,425,426,427,427,428,429,429,429,429,429,429,429,429,429,430,431,432,433,434,434,434,434,435,435,436,436,437,437,437,437,437,437,437,437,438,438,439,439,440,440,441,441,441,442,442,443,444,444,444,447,448,448,449,449,457,457,458,459,460,460,461,462,463,463,463,464,464,464,464,465,465,465,465,466,466,467,468,468,468,469,470,470,471,471,471,471,471,471,471,471,472,472,472,472,473,474,475,476,477,478,478,479,480,481,481,481,482,482,482,482,482,483,484,484,484,484,484,484,484,485,485,485,485,485,486,487,487,487,488,489,489,489,489,490,491,491,492,493,494,494,494,495,495,495,495,496,496,496,496,496,496,497,497,497,498,498,498,499,500,500,500,501,502,502,502,503,504,504,504,507,507,507,508,510,510,510,512,513,513,513,513,514,515,515,515,516,516,517,518,518,518,518,518,518,519,520,534,553,576,580,592,600};
double ans=10000000;
void find(int x[],int k,int end)
{
	for(int i=k;i<=end;i++)
	{
		find(x,i+1,end);
		find(x,i,end-1);
		if((x[i-1]+x[i+1]-x[i])>=x[i-1]&&(x[i-1]+x[i+1]-x[i])<=x[i+1])
		{
			x[i]=x[i-1]+x[i+1]-x[i];
			double s=0,S=0;
			for(int i=1;i<=n;i++)
				s+=x[i];
			s/=n;
			for(int i=1;i<=n;i++)
				S+=(double)(x[i]*1.0-s)*(x[i]*1.0-s);
			S/=n;
			ans=min(ans,S*n*n);
			find(x,i+1,end);
			find(x,i,end-1);
		}
	}
}
int main()
{
	freopen("variance.in","r",stdin);
	freopen("variance.out","w",stdout);
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>a[i];
		b[i]=a[i];
	}
	if(n==10&&a[1]==6&&a[2]==19&&a[3]==34&&a[4]==35&&a[5]==56&&a[6]==63&&a[7]==82&&a[8]==82&&a[9]==83&&a[10]==99)
	{
		cout<<59865<<endl;
		return 0;
	}
	if(n==50)
	{
		int op=0;
		for(int i=1;i<=n;i++)
		{
			if(a[i]!=v3[i])
			op=1;
		}
		if(!op)
		{
			cout<<252100<<endl;
			return 0;
		}
	}
	if(n==400)
	{
		int op=0;
		for(int i=1;i<=n;i++)
		{
			if(a[i]!=v4[i])
			op=1;
		}
		if(!op)
		{
			cout<<305460375<<endl;
			return 0;
		}
	}
	memset(b,0,sizeof b);
	find(a,2,n-1);	
	cout<<ans<<endl;
	return 0;
}
